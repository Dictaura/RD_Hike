import Levenshtein
import RNA
import torch
import matplotlib.pyplot as plt

aim_dotB = '...((((((((...)))))((.........))................((((...(((((((((((....))))))..)))))...)))).(((..((.(((....(((((..((....)).)))))....)))...))..)))..(((((..(.((((....)))))..)))))(((((.......)))))....((((((((.(((.((((((((....)))))))))))..))))).))).....))).'
seq_list = [
    'UCCCUGGGAGUAACACUCCCCGUAAAAAUAGGAACACAGCUAGGUCUAGGAUAUGCCCGGCAAUAGAUGCCUAUUGGACCGGGAGAAUCCACACGAGUAAUCUGCGGUCCCCUCCUAACGGUGGGACGAUUGAUACAACAAGUGAAGGCACUAGAGCUGCCGUCAGCCCCGUGCCCGUUUCCCGUCAAAACGCCGACACACGUUAUAUGUGGUGAUCUCGAGAUCACCAAUAGCAACGUAGUGGUAAACAGA',
    'ACUUUGGCGUUUUAAACGCGGUCUUUUAAUCCCUAUUCUCUAAUCAUAUAAUACACAGGGAUGUCUGCCGAGACAUUACCCUGGCCAUUACGGGUGUCCGAUUACAGCUUAUCGUCCUAACCUAAGCAUCUAUCAAAGAGUCCCACUUCCGCAGAUCCGGUCUCGGACAACGGAAGAGAGCUAUACACUCUCCGUCGCUAUACCCGAUGCCAGAUACAAGAGUAUCUGGAUCCUGGUAUCAGCUGUAGCAAA',
    'UUAGUACACCCUUGGGGUGGGCCAUUUUAACCGUUUAACAUCAACCAAACGGAGUAUCUAUGCAAGCAGGCUUGCAGCUAGAUUUGCCGUAUGAUUGGGCGCUCCUCCACAAACAGAGAUGCUGUGGUCACGCGAAACCUUUCAGUGGAAAGUCACCAGUACACUGGGUAUUUCCGGGCGCACAUUACGCCCUCACGUCCUACUCUGUAGGCCUAGCAACGGCUAGGCCACAUUAGUAGAGACCUUAUUACA',
    'AUAGACGCAGCUAAGCUGCCCAAUACAUCCGGAACCCACUUAUAGUCUGCGCCUCCGGCCGGCCUAAGGUUAGGCCACGGCCGACCGCGCUUCAAGGAACGGGCUAUGCAGACCGAGAGCGCCUGCACAUACCGCAAUCGAUGAUCCAGAUGAGCGGGCUUUUGCCCCGAAUCUGCAGCGCGCGAAUCGCUGAUGAGUAUGGAAGUACUAGUGCGGGGCGUCCCGCACUGUAGAUUCCAUUACAACAUGUCA',
    'UGAACCUGCAGUCUCUGCACCAAAUAUCAAGGGUAAGUCAAACGAGGGGCAUGAAAUAACAGUAUUCCAAAAUACUGAGUUAUAAAAUGCACGAGAGUCGAGGAAGACGGGCCUGGAUGCAACCCGUGAAACUCAAUACGGUCGCUGUUGCCGCUCUGCGUUCGCAGGAAGCAACGUACCCCAAUGAGGUACUUCAAUGGCCAUCGCUUGGUUUGGUGACAACCAAACCAGCACAUGGCUCAUGUAGCGGUG',
    'UCCGUGAUCAAGACUUGAUGCGACUAAAGAGCUACACCAUAUUCAUCACAGUAACAAAGCAUGUUAGGUCUAACAUGGGCUUUCUCACUGACGUCGGCAGGCACUCGACACGAGCGGCAGCGGUGUCACUAGCCAAAGCAAACGAUCGACCGACACCAGCUUUCUGGGGAGGUCGUUGGAAAAAAAGUCCAAAACAUUGGCUAUUGAGAUUCAAAUAUUACUAUUUGAACUCUUAUAGCACAACUAUGCACA',
    'ACAGCAGAAGCCCGGCUUCGGAAAACAAUACCGCACAAAAAUCACAUGACAGAUAGCUGUCCAAACAGUAGUUUGGGCACAGCCCACUGUAUUCAUAGAAGAGGACGCGUCGGCGUCAACGGGACGCAAAAUCUACGCUUGGAAAAACGAGAAGACGGAUGGCUCCGCCCCUCGUCGGCCGCCAUUAGGCCGUACCGCCUCGUUCAUGUAGACUGUUUAUUAACAGUCUCAUAAAACGACGGCUCGAUUGCG',
    'CUCGAUGUCUUACCAAGACGCCAUUUACACGCCAUUAUUACUCAUUCGCCCUAAAGUGAAUUGUUAAGCGUAACAAGCUUCACGGGAGGGGGCUAGUCCACGGAUCCUCAGCAUCUUUUGAACUGAGACAACGUUUUGAGGAGCGACGGCAAGCUGCAUCCUUAUGCGAGUGCCGCGGCCUACUGCCGGCCGUCAAGCGGUUCAGCGUCGGUACUUAGCGCUAAGUACCACGGGUGAACGCGCGAUAGAUCU',
    'ACCAGAGUGGACUAUCCACGGAGUUUUAAACCUAUUAACCAAAGUAAGCGUAUUCCCCGUACAGUGAACCCACUGUUGACGGGUUCUACGACGAAUCACUGUAAAAGCGAUAAGGCCUUCCGAUCGCGUUCACAUUUUGUCUCGACCUGACGGCUCCAAGUUAUUGGGAAGUCAGAGAACGAUAACGGUUCUUAUCCUGGAGACAACCAGGUAAGAACACCUUCUUACCGGUGAGUCUCGCAGCAAGAUCUC',
    'ACUUGUGACCGUGACGGUCCCUUAUAUCAUGGAUUCGUUCGAGCUUACGUACACCAACCAACCGGAGGGGUCCGGUUAUGGUUCCAGUACACCGCGCCAGCACCAAGGUGGGAGCCGAGGCACCACCCAUUUGCCGAGGACCGGGACCAAGUUGUCUUCUUUAGAAGCCCCUUGGGGCGGGUACUAGCCGCCCUCAGAUAAAAUGAGCCACUGGAAAACGCUUUCCAGUGCUAAAUUUUCAUCAAUUGACAG'
]

novel_list = []
dist_list = []

for i in range(len(seq_list)):
    seq = seq_list[i]
    seq_rest = [seq_list[j] for j in range(len(seq_list)) if j != i]
    dist = [Levenshtein.distance(seq, seq_) for seq_ in seq_rest]
    dist_min = min(dist)
    novel_list.append(dist_min/len(seq))
    dotB = RNA.fold(seq)[0]
    dist_list.append(RNA.hamming_distance(aim_dotB, dotB))

print(dist_list)
print(novel_list)

step_list = [677, 1735, 1386, 129, 524, 2316, 1255, 715, 1425, 318]

x = list(range(len(seq_list)))
y = novel_list

# plt.bar(x, y, label='novelty')
plt.plot(x, step_list, label='solving step', color='r')
plt.title('solving step')

print(len(dotB))


plt.show()
